{
  "name": "random-charts",
  "tagline": "Library for creating random tables and random charts for role playing games (rpgs).",
  "body": "# Random Charts #\r\n\r\n[ ![Codeship Status for shaefer/random-charts](https://codeship.com/projects/84bbc1a0-1df9-0134-65af-1e312222cad2/status?branch=master)](https://codeship.com/projects/160049)\r\n[ ![npm version](https://badge.fury.io/js/random-charts.png)](https://badge.fury.io/js/random-charts)\r\n\r\nA small library for the easy creation of random charts.\r\n\r\n## Setup\r\n* Assumes node installed\r\n* npm install\r\n* npm run build (jshint, clean, babel, test)\r\n\r\n## Usage Examples ##\r\nNote: Items in a chart can be just Strings or a deep object. (See tests in the charts folder.)\r\n\r\n```javascript\r\n//Basic Chart (basic items selection = equal chance of all items)\r\nconst items = [\"Item1\", \"Item2\"];\r\nconst chart = new RandomChart(\"NewChartName\", items);\r\nconst singleItem = chart.get();\r\nconst sixItems = chart.get(6);\r\n```\r\nExample showing item selection with dice rolling. More than 1 die rolled produces a bell curve. [2d4 Bell curve from AnyDice](http://anydice.com/program/4d6)\r\n```javascript\r\n//Basic Chart with items selected by Rolling Dice (2d4 Bell curve)\r\nconst diceItems = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\r\nconst selectionStrategy2d4 = new DiceRollItemSelection(2, 4);\r\nconst diceChart = new RandomChart(\"DiceChart\", diceItems, \"randSeed\", selectionStrategy2d4;\r\nconst singleDiceItem = chart.get(); //rolled 2d4 to get an item from the chart.\r\nconst sixDiceItems = chart.get(6);\r\n```\r\n\r\n```\r\n//chart result example\r\n[\r\n  {\r\n    \"index\": 1,\r\n    \"item\": \"Item2\"\r\n  }\r\n]\r\n```\r\n\r\nExample showing rolling a table that links to other tables.\r\n```javascript\r\n//LinkedChart (table with linked subtables...\"roll deep\")\r\nconst subTable = {\r\n    linked: false,\r\n    name: \"A SubTable\",\r\n    items: [\"Chart2-A\", \"Chart2-B\", \"Chart2-C\"]\r\n};\r\nconst mainTable = {\r\n    name: \"Some Linked Chart\",\r\n    items: [\"Chart1-1\", \"Chart1-2\", \"Chart1-3\", {linkedTable:subTable.name, description:\"Roll on Subtable: \" + subTable.name}]\r\n};\r\n\r\nconst randomSeedThatReturnsIndexOf3ToForceTestOfLinkedItem = 3; //get the linkedItem to demonstrate rolling into subtables\r\nconst chart = new LinkedChart(mainTable.name, mainTable.items, [subTable], randomSeedThatReturnsIndexOf3ToForceTestOfLinkedItem);\r\nconst singleItem = chart.get(); //\r\n```\r\n\r\n```\r\n//Linked chart result example\r\n[\r\n  { \r\n    index: 3,\r\n    item:\r\n        { \r\n            linkedTable: 'A SubTable',\r\n            description: 'Roll on Subtable: A SubTable' \r\n        },\r\n    subResult: \r\n    [ \r\n        { \r\n            index: 2, \r\n            item: 'Chart2-C' \r\n        } \r\n    ] \r\n  }\r\n]\r\n```\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}